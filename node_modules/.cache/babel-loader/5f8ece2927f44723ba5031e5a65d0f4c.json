{"ast":null,"code":"import _classCallCheck from \"/Users/nostra/Documents/react/ukom/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nostra/Documents/react/ukom/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport Constant from '../../../../config/Constants';\n\nvar AuthService =\n/*#__PURE__*/\nfunction () {\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n  }\n\n  _createClass(AuthService, [{\n    key: \"login\",\n    value: function login(data) {\n      var URL = Constant.URL_MASTER_PATH + Constant.URL_LOGIN;\n      var payload = data;\n      return new Promise(function (resolve, reject) {\n        axios.post(URL, payload).then(function (response) {\n          resolve(response);\n        }).catch(function (error) {\n          reject('ERROR');\n        });\n      });\n    }\n  }]);\n\n  return AuthService;\n}();\n\nexport default AuthService;","map":{"version":3,"sources":["/Users/nostra/Documents/react/ukom/src/views/Pages/Login/Service/AuthService.js"],"names":["axios","Constant","AuthService","data","URL","URL_MASTER_PATH","URL_LOGIN","payload","Promise","resolve","reject","post","then","response","catch","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,8BAArB;;IAEMC,W;;;;;;;;;0BACEC,I,EAAK;AACL,UAAMC,GAAG,GAAGH,QAAQ,CAACI,eAAT,GAA2BJ,QAAQ,CAACK,SAAhD;AACA,UAAMC,OAAO,GAAGJ,IAAhB;AAEA,aAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AAClCV,QAAAA,KAAK,CAACW,IAAN,CAAWP,GAAX,EAAgBG,OAAhB,EAAyBK,IAAzB,CAA8B,UAAAC,QAAQ,EAAI;AACtCJ,UAAAA,OAAO,CAACI,QAAD,CAAP;AACH,SAFD,EAEGC,KAFH,CAES,UAAAC,KAAK,EAAE;AACZL,UAAAA,MAAM,CAAC,OAAD,CAAN;AACH,SAJD;AAKH,OANM,CAAP;AAOH;;;;;;AAGL,eAAeR,WAAf","sourcesContent":["import axios from 'axios';\nimport Constant from '../../../../config/Constants';\n\nclass AuthService {\n  login(data){\n        const URL = Constant.URL_MASTER_PATH + Constant.URL_LOGIN;\n        const payload = data;\n\n        return new Promise((resolve, reject)=>{\n            axios.post(URL, payload).then(response => {\n                resolve(response);\n            }).catch(error=>{\n                reject('ERROR');\n            });\n        })\n    };\n}\n\nexport default AuthService;\n"]},"metadata":{},"sourceType":"module"}